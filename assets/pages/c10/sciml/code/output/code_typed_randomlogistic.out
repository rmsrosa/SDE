Code typed for `f_randomlogistic1(1.0, (1.5, 2.0, 0.2, 0.1), 3.0, 0.5)):
CodeInfo(
1 ─ %1  = Base.getfield(p, 1)::Float64
│   %2  = Base.getfield(p, 2)::Float64
│   %3  = Base.getfield(p, 3)::Float64
│   %4  = Base.getfield(p, 4)::Float64
│   %5  = Base.abs_float(W)::Float64
│   %6  = Base.add_float(1.0, %5)::Float64
│   %7  = Base.div_float(W, %6)::Float64
│   %8  = invoke Main.FD_SANDBOX_3637103081925323742.sin(W::Float64)::Float64
│   %9  = Base.mul_float(%3, %7)::Float64
│   %10 = Base.add_float(%1, %9)::Float64
│   %11 = Base.mul_float(%4, %8)::Float64
│   %12 = Base.add_float(%2, %11)::Float64
│   %13 = Base.mul_float(%12, u)::Float64
│   %14 = Base.sub_float(%10, %13)::Float64
│   %15 = Base.mul_float(%14, u)::Float64
└──       return %15
) => Float64

Code typed for `f_randomlogistic2(1.0, (1.5, 2.0, 0.2, 0.1), 3.0, 0.5))
CodeInfo(
1 ─ %1  = Base.getfield(p, 1, true)::Float64
│   %2  = Base.getfield(p, 3, true)::Float64
│   %3  = Base.mul_float(%2, W)::Float64
│   %4  = Base.abs_float(W)::Float64
│   %5  = Base.add_float(1.0, %4)::Float64
│   %6  = Base.div_float(%3, %5)::Float64
│   %7  = Base.add_float(%1, %6)::Float64
│   %8  = Base.getfield(p, 2, true)::Float64
│   %9  = Base.getfield(p, 3, true)::Float64
│   %10 = invoke Main.FD_SANDBOX_3637103081925323742.sin(W::Float64)::Float64
│   %11 = Base.mul_float(%9, %10)::Float64
│   %12 = Base.add_float(%8, %11)::Float64
│   %13 = Base.mul_float(%12, u)::Float64
│   %14 = Base.sub_float(%7, %13)::Float64
│   %15 = Base.mul_float(%14, u)::Float64
└──       return %15
) => Float64
